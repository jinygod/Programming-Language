[배열]

1. 배열
	- 동일한 자료들의 연속된 모음
	- 일반적인 변수는 하나의 변수에 하나의 값만 할당
	- 배열은 여러개의 값을 넣을 수 있다.
	- 1차원부터 n차원까지 선언이 가능
	- 1차원: 0부터 n까지 할당
	- 2차원: 행과 열
	- 3차원: 면, 행, 열(2차원이 n개)
	- 동일한 자료들을 편리하게 관리
	- 자료를 빠르게 처리
	- 배열의 선언은 대괄호: []
	- 배열의 초깃값 중괄호: {}
	- 초깃값을 지정하면 지정된 갯수에 해당하는 배열의 크기가 결정
	- 배열의 선언:
		타입[] 변수 = { 값1, 값2, ...};
		타입[] 변수 = new 타입[] { 값1, 값2, ...};
		타입[] 변수 = new 타입[길이];
		int[] arr = { 10, 20, 30, 40 };
		int[] arr = new int[] { 10, 20, 30 };
		int[] arr = new int[10];
	- 참조:
		int[] arr = { 10, 20, 30, 40 };
		int a = arr[0];
		int b = arr[1];
	- 값의 지정
		int[] arr = { 10, 20, 30, 40 };
		arr[0] = 55;
		arr[1] = 66;
		
2. 배열의 초깃값: 배열을 선언하고 초깃값을 지정하지 않으면 
	- 정수형: 0, long(0L)
	- 실수형: float(0.0F), double(0.0)
	- 논리형: boolean(false)
	- 참조형: class(null), interface(null)
	
3. 원시타입(기본타입)
	- boolean, byte, char, short, int, long, float, double
	- 자료전달 방식: 값을 전달, call by value
	
4. 참조타입
	- 자료전달 방식: 주소 전달, call by reference
	- 배열, 클래스, 열거형, 문자열(String), 인터페이스
	- 참조타입을 이용해서 선언된 변수는 메모리에 주소를 값으로 갖는다.
	- 객체를 참조한다는 의미에서 참조타입
	
5. 변수의 선언
	- 메모리 영역은 스택(stack)과 힙(heap)
	- 로컬 변수*가 선언되면 스택(stack) 영역에 할당
	- 기본 타입은 스택영역에 변수이름과 값이 같이 할당
	- 참조 타입은 스택영역에는 변수이름과 참조되는 주소가 할당되고
	  해당 하는 값은 힙영역에 할당
	- 참조타입으로 선언된 변수의 힙 영역에 있는 데이터는 여러 변수에서 공유할 수 있다.
	  그러므로 다른 변수에서 값을 변경하면 공유하고 있는 모든 변수에서 변경된다.
	  
6. 메모리 사용 영역
	- 메소드(method) 영역
	- 스택(stack) 영역
	- 힙(heap) 영역
	
7. 메소드(method) 영역
	- 메소드는 클래스의 멤버 함수
	- 클래스(속성, 멤버함수)가 로드되어 위치하는 공간

8. 스택(stack) 영역
	- 변수의 선언에 의해서 변수가 할당
	- 기본 타입은 변수의 이름과 값이 같이 할당
	- 참조 타입은 변수의 이름과 주소가 할당
	- 스레드별로 하나의 스택 공간이 할당
	- 기본적으로 주(main) 스레드는 반드시 하나가 할당
	
9. 힙(heap) 영역
	- new에 의해서 생성된 데이터가 위치
	- 객체가 위치하는 공간
	- 객체는 클래스가 실체화된 것
	- 쓰레기 수집기(Garbage Collector)가 관리
		> 사용되지 않는 객체를 제거해서 재활용